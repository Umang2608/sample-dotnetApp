trigger:
  branches:
    include: 
    - master
variables:
  buildConfiguration: 'Release'
  location: 'West US 2'
  acrHostName: 'cswebappdocker004acr.azurecr.io'
  acrName: 'cswebappdocker004acr'
  rgName: 'cswebappdocker004-rg'
  imageName: 'cswebappdocker004'
  webAppName: 'cswebappdocker004'

stages:

# Build Stage
- stage: BuildAndTest
  jobs:
  - job: BuildAndTest
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:

    # Create or update the ACR resource
    
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: 2.2.x
        installationPath: $(Agent.ToolsDirectory)/dotnet        
  
    # Restore dependencies
    - task: DotNetCoreCLI@2
      displayName: 'restore'
      inputs:
        command: restore
        projects: '**/*.csproj'

    # Build app
    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: build
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    # Run unit tests
    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command:  test
        projects: '**/*UnitTests/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'

    # Publish the app
    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(System.DefaultWorkingDirectory)/PublishedWebApp'
        zipAfterPublish: false
    
    

    - task: Docker@2
      inputs:
        containerRegistry: 'azure'
        repository: 'azure'
        command: 'build'
        Dockerfile: '**/Dockerfile'
    
    - task: Docker@2
      inputs:
        containerRegistry: 'azure'
        command: 'login'
    
    - task: Docker@2
      inputs:
        containerRegistry: 'azure'
        repository: 'azure'
        command: 'push'
        
        
    # Copy ARM templates
    - task: CopyFiles@2
      displayName: 'Copy ARM templates'
      inputs:
        SourceFolder: ArmTemplates
        TargetFolder: '$(build.artifactstagingdirectory)'

    # Publish the app as an artifact
    - publish: $(Build.StagingDirectory)
      artifact: app

# Staging release
- stage: Staging
  jobs:
  - job: Release
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:
    # Don't clone the repo
    - checkout: none

    # Download the published application artifact
    - download: current
      artifact: app

    # Create or update Azure App Service
   
    # Deploy App Service
    